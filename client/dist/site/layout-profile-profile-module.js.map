{"version":3,"sources":["./projects/site/src/app/layout/profile/profile.module.ts","./projects/site/src/app/layout/profile/profile.component.ts","./projects/site/src/app/layout/profile/profile.component.html","./projects/site/src/app/layout/profile/profile-routing.module.ts"],"names":[],"mappings":"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","file":"layout-profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { MaterialModule } from '../../shared/material.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [\n    ProfileRoutingModule.components\n  ],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    MaterialModule,\n    FontAwesomeModule\n  ]\n})\nexport class ProfileModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faFacebook, faLinkedin, faTwitter, faTiktok, faDiscord, faInstagram, faYoutube } from '@fortawesome/free-brands-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DataService, User, UserData, Image, Link, Meta } from '../../core/services/data.service';\n\nexport interface Userr extends User {\n  image: Image[]\n}\n\nexport interface Userss {\n  user: Userr,\n  link: Link,\n  meta: Meta\n}\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  faFacebook = faFacebook\n  faLinkedin = faLinkedin\n  faTwitter = faTwitter\n  faTiktok = faTiktok\n  faDiscord = faDiscord\n  faInstagram = faInstagram\n  faYoutube = faYoutube\n  faEllipsisH = faEllipsisH\n\n  username: string\n\n  dataSource: Userss = null\n\n  //Handle unsubscriptions\n  private ngUnsubscribe = new Subject()\n\n  constructor(private dataService: DataService,\n              private activatedRoute: ActivatedRoute) { }\n\n  async getUser() {\n    this.dataService.findByUsername(this.username).pipe(\n      //Display data into console log\n      tap(users => console.log('ree' + users)),\n      map((userData: Userss) => this.dataSource = userData),\n      takeUntil(this.ngUnsubscribe)\n    ).subscribe()\n\n    console.log(this.dataSource)\n\n    setTimeout(() => console.log(this.dataSource), 7000)\n\n    console.log(this.username)\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.username = this.activatedRoute.snapshot.paramMap.get('username')\n\n    await this.getUser()\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next()\n\n    this.ngUnsubscribe.complete()\n  }\n}\n","<div class=\"md:flex h-full text-amethyst bg-bedrock flex-col\">\n    <div class=\"m-auto md:w-4/5\">\n        <!-- Background image -->\n        <ng-container *ngIf=\"dataSource.user.image.length > 0\">\n            <ng-container *ngFor=\"let image of dataSource.user.image\">\n                <div class=\"relative\" *ngIf=\"image.type === 'background'\">\n                    <img class=\"object-fit-cover\" [src]=\"image.link ? image.link : './../../../assets/img/860x394.jpg'\" alt=\"Background\">\n                    <button class=\"absolute -bottom-7 md:right-16 right-7\" [matMenuTriggerFor]=\"menu\">\n                        <fa-icon [icon]=\"faEllipsisH\"></fa-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" yPosition=\"below\" xPosition=\"before\" [overlapTrigger]=\"false\">\n                        <button mat-menu-item>Report</button>\n                    </mat-menu>\n                </div>\n                <div class=\"relative\" *ngIf=\"image.type !== 'avatar' && image.type !== 'background'\">\n                    <img class=\"object-fit-cover\" src=\"./../../../assets/img/860x394.jpg\" alt=\"Background\">\n                    <button class=\"absolute -bottom-7 md:right-16 right-7\" [matMenuTriggerFor]=\"menu\">\n                        <fa-icon [icon]=\"faEllipsisH\"></fa-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" yPosition=\"below\" xPosition=\"before\" [overlapTrigger]=\"false\">\n                        <button mat-menu-item>Report</button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dataSource.user.image.length === 0\">\n            <div class=\"relative\">\n                <img class=\"object-fit-cover\" src=\"./../../../assets/img/860x394.jpg\" alt=\"Background\">\n                <button class=\"absolute -bottom-7 md:right-16 right-7\" [matMenuTriggerFor]=\"menu\">\n                    <fa-icon [icon]=\"faEllipsisH\"></fa-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" yPosition=\"below\" xPosition=\"before\" [overlapTrigger]=\"false\">\n                    <button mat-menu-item>Report</button>\n                </mat-menu>\n            </div>\n        </ng-container>\n        <div>\n            <!-- Two column sections -->\n            <div class=\"md:flex justify-between p-10 gap-x-3\">\n\n                <!-- Overlaping by half of the avatar of background image -->\n                <div class=\"md:w-1/3 flew flex-row transform -translate-y-24\">\n                    <!-- Two column -->\n                    <div class=\"flex flex-col\">\n                        <div class=\"md:block\">\n                            <span class=\"p-2 text-amethyst hover:text-orange-700 mr-2 flex-wrap content-center flex\">\n                                <!-- Avatar image -->\n                                <ng-container *ngIf=\"dataSource.user.image.length > 0\">\n                                    <ng-container *ngFor=\"let image of dataSource.user.image\">\n                                        <span class=\"rounded-full p-1 inline-block bg-yellow-500\" *ngIf=\"image.type === 'avatar'\">\n                                            <img [src]=\"image.link ? image.link : './../../../assets/img/1815212332_preview_istockphoto-590147780-612x612 (1).jpg'\"\n                                                alt=\"Logo\" class=\"w-32 h-32 rounded-full\">\n                                        </span>\n                                        <span class=\"rounded-full p-1 inline-block bg-yellow-500\" *ngIf=\"image.type !== 'avatar' && image.type !== 'background'\">\n                                            <img src=\"./../../../assets/img/1815212332_preview_istockphoto-590147780-612x612 (1).jpg\"\n                                                alt=\"Logo\" class=\"w-32 h-32 rounded-full\">\n                                        </span>\n                                    </ng-container>\n                                </ng-container>\n\n                                <ng-container *ngIf=\"dataSource.user.image.length === 0\">\n                                    <ng-container>\n                                        <span class=\"rounded-full p-1 inline-block bg-yellow-500\">\n                                            <img src=\"./../../../assets//img/1815212332_preview_istockphoto-590147780-612x612 (1).jpg\"\n                                                alt=\"Logo\" class=\"w-32 h-32 rounded-full\">\n                                        </span>\n                                    </ng-container>\n                                </ng-container>\n\n                                <!-- First name, last name and gender -->\n                                <div class=\"flex-grow p-3\" style=\"align-self: flex-end;\">\n                                    <div class=\"font-semibold text-gray-700\">\n                                        <span>{{dataSource.user.first_name}} </span> <span>{{dataSource.user.last_name}}</span>\n                                    </div>\n                                    <div class=\"text-sm text-gray-500\">\n                                        <span>{{dataSource.user.username}}</span>\n                                    </div>\n                                    <div class=\"text-sm text-gray-500\">\n                                        <span>{{dataSource.user.gender}}</span>\n                                    </div>\n                                </div>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 md:mb-40 mb-7\">\n                        <div class=\"mx-auto\">\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.facebook\">\n                                <span class=\"text-blue-500 w-7\">\n                                    <fa-icon [icon]=\"faFacebook\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.facebook}}\" target=\"_blank\">Facebook</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.linkedin\">\n                                <span class=\"text-blue-500 w-7\">\n                                    <fa-icon [icon]=\"faLinkedin\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.linkedin}}\" target=\"_blank\">LinkedIn</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.twitter\">\n                                <span class=\"text-blue-500 w-7\">\n                                    <fa-icon [icon]=\"faTwitter\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.twitter}}\" target=\"_blank\">Twitter</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.tiktok\">\n                                <span class=\"text-gray-800 w-7\">\n                                    <fa-icon [icon]=\"faTiktok\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.tiktok}}\" target=\"_blank\">TikTok</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.discord\">\n                                <span class=\"text-blue-300 w-7\">\n                                    <fa-icon [icon]=\"faDiscord\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.discord}}\" target=\"_blank\">Discord</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.instagram\">\n                                <span class=\"text-purple-400 w-7\">\n                                    <fa-icon [icon]=\"faInstagram\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.instagram}}\" target=\"_blank\">Instagram</a>\n                            </div>\n                            <div class=\"flex gap-x-3\" *ngIf=\"dataSource.user.social_media.youtube\">\n                                <span class=\"text-red-800 w-7\">\n                                    <fa-icon [icon]=\"faYoutube\"></fa-icon>\n                                </span>\n                                <a href=\"{{dataSource.user.social_media.youtube}}\" target=\"_blank\">YouTube</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex\">\n                        <div class=\"md:px-7\">\n                            <span class=\"text-yellow-700\">Shares with you X interests</span>\n                        </div>\n                    </div>\n                </div>\n\n                <mat-divider [vertical]=\"true\"></mat-divider>\n\n                <!-- Description and interests -->\n                <div class=\"md:w-2/3 flex flex-col\">\n                    <div class=\"mb-7\">\n                        <h3 class=\"text-xl\">About</h3>\n                        <p *ngIf=\"dataSource.user.description.length; else defaultDescription\">{{dataSource.user.description}}</p>\n                        <ng-template #defaultDescription>\n                            <p>Whatever, however, this user is mysterious</p>\n                        </ng-template>\n                    </div>\n                    <div>\n                        <h3 class=\"text-xl\">Hobbies</h3>\n                        <mat-chip-list>\n                            <ng-container *ngFor=\"let interest of dataSource.user.interest\">\n                                <mat-chip class=\"mt-3\">{{interest}}</mat-chip>\n                            </ng-container>\n                        </mat-chip-list>\n                    </div>\n                </div>\n            </div>\n\n            <mat-divider></mat-divider>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {\n  static components = [ ProfileComponent ];\n}\n"],"sourceRoot":"webpack:///"}